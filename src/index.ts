import express from 'express';
import http from 'http';
import { Server } from 'socket.io';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

const app = express();
const server = http.createServer(app);
const io = new Server(server, {
  cors: {
    origin: '*', // —Ä–∞–∑—Ä–µ—à–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è
  },
});

const PORT = 3000;

const buildPath = path.join(__dirname, '../frontend/dist');
app.use(express.static(buildPath));

app.get('*', (_req, res) => {
  res.sendFile(path.join(buildPath, 'index.html'));
});


//app.use(express.static(path.join(__dirname, '../public')));
/*
// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
app.get('/', (_req, res) => {
  res.send('üöÄ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç —Å Socket.IO!');
});
*/
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
io.on('connection', (socket) => {
  console.log(`üì° –ö–ª–∏–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á—ë–Ω: ${socket.id}`);

  socket.on('disconnect', () => {
    console.log(`‚ùå –ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á—ë–Ω: ${socket.id}`);
  });
});

server.listen(PORT, () => {
  console.log(`‚úÖ Socket.IO —Å–µ—Ä–≤–µ—Ä: http://localhost:${PORT}`);
});
